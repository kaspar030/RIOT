context:
  - name: cortexm
    parent: riot
    env:
        PREFIX: arm-none-eabi-
        CFLAGS_STD:
            - -std=c99
        CFLAGS_ARCH:
            - -mlittle-endian -mthumb
            - -mno-thumb-interwork
        CFLAGS_CODEGEN:
            - -fno-common
            - -fno-delete-null-pointer-checks
        CFLAGS_DEFINES:
            - -DDONT_USE_CMSIS_INIT
        LINKFLAGS:
            - -L${relpath}/ldscripts
            - -static
            - -nostartfiles
            - -Wl,--defsym=_rom_length=${ROM_LEN}
            - -Wl,--defsym=_ram_length=${RAM_LEN}
        includes:
            - ${relpath}/include
            - ${relpath}/include/vendor
            - ${root}/sys/libc/include
        libs:
            - -lm

        RIOTBOOT_LEN: "0x2000"
        SLOT0_OFFSET: ${RIOTBOOT_LEN}

defaults:
    module:
        context: cortexm

module:
    - name: cortexm
      sources:
       - cortexm_init.c
       - mpu.c
       - panic.c
       - thread_arch.c
      depends:
          - core
          - cortexm_common
          - cortexm_common_periph
          - cortexm_vectors
          - ?newlib
      uses:
          - cortexm_common
          - cortexm_fpu

    - name: cortexm_common

    - name: cortexm_vectors
      sources:
          - vectors_cortexm.c
      uses:
          - newlib

    - name: feature/arch_32bit

    - name: mpu_stack_guard

    - name: printf_float
      env:
        global:
          LINKFLAGS:
              - -u _printf_float

    - name: scanf_float
      env:
        global:
          LINKFLAGS:
              - -u _scanf_float

    - name: feature/cpp
      env:
        global:
          LINK:
            - arm-none-eabi-c++

    - name: feature/stack_protector

    - name: riotboot_config
      depends:
        - feature/riotboot
      env:
        export:
          CFLAGS:
              - -DSLOT0_OFFSET=${SLOT0_OFFSET}

subdirs:
    - periph
