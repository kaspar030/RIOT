rule:
    - name: CC
      in: '.c'
      out: '.o'
      depfile: "$out.d"
      deps: gcc
      cmd: '${CC} -MMD -MF $out.d ${CFLAGS_STD} ${CFLAGS} ${includes} -c ${in} -o ${out}'
    - name: CXX
      in: '.cpp'
      out: '.o'
      depfile: "$out.d"
      deps: gcc
      cmd: '${CXX} -MMD -MF $out.d ${CXXFLAGS_STD} ${CFLAGS} ${CXXFLAGS} ${includes} -c ${in} -o ${out}'
    - name: ASM
      in: '.S'
      out: '.o'
      cmd: '${CC} ${CFLAGS} -c ${in} -o ${out}'
    - name: LINK
      in: '.o'
      options:
          combine: true
      cmd: '${LINK} ${LINKFLAGS} ${CFLAGS} ${in} ${libs} -o ${out}'

    - name: SYMLINK
      cmd: 'ln -f ${in} ${out}'

      #- name: GIT_DOWNLOAD
      #cmd: 'D=$$(dirname ${out}); rm -rf $$D && git clone ${URL} $$D -n && git -C $$D reset --hard ${COMMIT} && touch ${out}'
    - name: GIT_DOWNLOAD
      cmd: 'D=$$(dirname ${out}); rm -rf $$D && git-cache clone ${URL} ${COMMIT} $$D && touch ${out}'
    - name: PATCH
      cmd: 'D=$$(dirname ${out}); git -C $$D am ${in} && touch ${out}'

context:
    - name: default
      bindir: "build/bin/${builder}"
      vars:
          PREFIX: ""
          CC  : ${PREFIX}gcc
          CXX : ${PREFIX}g++
          LINK: ${PREFIX}gcc
          SIZE: ${PREFIX}size
          OBJCOPY: ${PREFIX}objcopy
          CFLAGS:
            - -Wall
            - -Werror
            - -Os
            - -g

    - name: riot
      parent: default
      vars:
          CFLAGS:
            - '-DRIOT_VERSION=\"laze\"'
            - -fdiagnostics-color
            - -ffunction-sections -fdata-sections
            - -fno-common
            - -fno-delete-null-pointer-checks
            - -fshort-enums
            - -Wextra
            - -Wformat-overflow
            - -Wformat-truncation
            - -Wformat=2
            - -Wmissing-include-dirs
              # these are invalid for cpp. maybe introduce C_ONLY_FLAGS?
              #- -Wold-style-definition
              #- -Wstrict-prototypes
          CXXFLAGS_STD:
            - -std=c++11
          LINKFLAGS:
            - -Wl,--gc-sections
          includes:
            - ${relpath}/drivers/include
            - ${relpath}/sys/include
      var_options:
          testsuites:
              start: -DTEST_SUITES=
              joiner: ','
          includes:
            prefix: -I
      tools:
          size:
              cmd:
               - "${SIZE} ${out}"

builder:
    - name: host
      parent: default
      tools:
        run:
          cmd:
            - "${out}"

module:
    - name: riot
      context: riot

    - name: riot_info
      context: riot
      export_vars:
        CFLAGS:
          - -DRIOT_BOARD=\"${builder}\"

    - name: host
      context: host

    - name: cpp
      depends:
        - feature/cpp

subdirs:
    [ dist, core, boards, cpu, drivers, sys, examples, tests, pkg, bootloaders ]
